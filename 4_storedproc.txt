CREATE TABLE Student (
    Roll_no INT,
    Name VARCHAR(50),
    Marks INT,
    Remark VARCHAR(10)
);
INSERT INTO Student (Roll_no, Name, Marks, Remark) VALUES (1, 'John', 80, ''), (2,'Felix',60,''), (3,'Kai',40,''), (4,'Yeonjun',35,'');
create procedure p1()
begin
  update Student
  set Remark= case when Marks >= 40 then 'Pass' else 'Fail' end;
call p1();
UPDATE Student
SET Remark = 'Pass'
WHERE Roll_no = 2;














/*-- Create the Student table
CREATE TABLE Student (
    Roll_no INT,
    Name VARCHAR(50),
    Marks INT,
    Remark VARCHAR(10)
);

-- Insert sample data into the Student table
INSERT INTO Student (Roll_no, Name, Marks, Remark)
VALUES (1, 'John', 80, '');

INSERT INTO Student (Roll_no, Name, Marks, Remark)
VALUES (2, 'Jane', 30, '');

-- Create a stored procedure to update the remark of a student based on marks
CREATE OR REPLACE PROCEDURE UpdateRemark(p_Roll_no IN INT) IS
    v_Marks INT;
BEGIN
    -- Get the marks for the given Roll_no
    SELECT Marks INTO v_Marks
    FROM Student
    WHERE Roll_no = p_Roll_no;
    
    -- Update the remark based on the marks
    IF v_Marks >= 40 THEN
        UPDATE Student
        SET Remark = 'pass'
        WHERE Roll_no = p_Roll_no;
    ELSE
        UPDATE Student
        SET Remark = 'fail'
        WHERE Roll_no = p_Roll_no;
    END IF;
    
    -- Commit the changes
    COMMIT;
    
    -- Display the updated student record
    SELECT * FROM Student WHERE Roll_no = p_Roll_no;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Student not found.');
END;
/

-- Call the stored procedure to update the remark of student with Roll_no = 2
BEGIN
    UpdateRemark(2);
END;
/
*/